[
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "authentication_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "authentication_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "authentication_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "AuthMiddlewareStack",
        "importPath": "channels.auth",
        "description": "channels.auth",
        "isExtraImport": true,
        "detail": "channels.auth",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "URLRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "AllowedHostsOriginValidator",
        "importPath": "channels.security.websocket",
        "description": "channels.security.websocket",
        "isExtraImport": true,
        "detail": "channels.security.websocket",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "chat.routing",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "chat.routing",
        "description": "chat.routing",
        "detail": "chat.routing",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "Chat",
        "importPath": "chat.models",
        "description": "chat.models",
        "isExtraImport": true,
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "Conversation",
        "importPath": "chat.models",
        "description": "chat.models",
        "isExtraImport": true,
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "Chat",
        "importPath": "chat.models",
        "description": "chat.models",
        "isExtraImport": true,
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "Conversation",
        "importPath": "chat.models",
        "description": "chat.models",
        "isExtraImport": true,
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "Chat",
        "importPath": "chat.models",
        "description": "chat.models",
        "isExtraImport": true,
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "Conversation",
        "importPath": "chat.models",
        "description": "chat.models",
        "isExtraImport": true,
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_token",
        "importPath": "django.middleware.csrf",
        "description": "django.middleware.csrf",
        "isExtraImport": true,
        "detail": "django.middleware.csrf",
        "documentation": {}
    },
    {
        "label": "get_token",
        "importPath": "django.middleware.csrf",
        "description": "django.middleware.csrf",
        "isExtraImport": true,
        "detail": "django.middleware.csrf",
        "documentation": {}
    },
    {
        "label": "csrf",
        "importPath": "django.middleware",
        "description": "django.middleware",
        "isExtraImport": true,
        "detail": "django.middleware",
        "documentation": {}
    },
    {
        "label": "csrf",
        "importPath": "django.middleware",
        "description": "django.middleware",
        "isExtraImport": true,
        "detail": "django.middleware",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "JWTAuthentication",
        "importPath": "rest_framework_simplejwt.authentication",
        "description": "rest_framework_simplejwt.authentication",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.authentication",
        "documentation": {}
    },
    {
        "label": "JWTAuthentication",
        "importPath": "rest_framework_simplejwt.authentication",
        "description": "rest_framework_simplejwt.authentication",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.authentication",
        "documentation": {}
    },
    {
        "label": "JWTAuthentication",
        "importPath": "rest_framework_simplejwt.authentication",
        "description": "rest_framework_simplejwt.authentication",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.authentication",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "async_to_sync",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "WebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "CSRFCheck",
        "importPath": "rest_framework.authentication",
        "description": "rest_framework.authentication",
        "isExtraImport": true,
        "detail": "rest_framework.authentication",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "shutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shutil",
        "description": "shutil",
        "detail": "shutil",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "JwtConfig",
        "kind": 6,
        "importPath": "backend.JWT.apps",
        "description": "backend.JWT.apps",
        "peekOfCode": "class JwtConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'JWT'",
        "detail": "backend.JWT.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.JWT.urls",
        "description": "backend.JWT.urls",
        "peekOfCode": "urlpatterns = [\n    path('token/refresh/', refreshTokenJWT, name = \"refresh_token_jwt\") # api refresh token access\n]",
        "detail": "backend.JWT.urls",
        "documentation": {}
    },
    {
        "label": "refreshTokenJWT",
        "kind": 2,
        "importPath": "backend.JWT.views",
        "description": "backend.JWT.views",
        "peekOfCode": "def refreshTokenJWT(request):\n    response = Response()\n    try:\n        # ----------------------------- check information ---------------------------- #\n        #decyption token jwt\n        jwtToken = request.COOKIES.get('refresh_token')\n        refresh_token = RefreshToken(jwtToken)\n        access_token = refresh_token.access_token\n        response.data = {\n            'access_token' : str(access_token) , ",
        "detail": "backend.JWT.views",
        "documentation": {}
    },
    {
        "label": "django_asgi_app",
        "kind": 5,
        "importPath": "backend.backend.asgi",
        "description": "backend.backend.asgi",
        "peekOfCode": "django_asgi_app = get_asgi_application()\nimport chat.routing\napplication = ProtocolTypeRouter(\n    {\n        \"http\": django_asgi_app,\n        \"websocket\": AllowedHostsOriginValidator(\n            AuthMiddlewareStack(URLRouter(chat.routing.websocket_urlpatterns))\n        ),\n    }\n)",
        "detail": "backend.backend.asgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.backend.asgi",
        "description": "backend.backend.asgi",
        "peekOfCode": "application = ProtocolTypeRouter(\n    {\n        \"http\": django_asgi_app,\n        \"websocket\": AllowedHostsOriginValidator(\n            AuthMiddlewareStack(URLRouter(chat.routing.websocket_urlpatterns))\n        ),\n    }\n)\nprint(AuthMiddlewareStack(URLRouter(chat.routing.websocket_urlpatterns)))",
        "detail": "backend.backend.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nload_dotenv(dotenv_path=os.path.join(BASE_DIR, '.env'))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-_xw%8m(b6h!(8lkajatqr@zq&v3*-v-&nqkdchi*w0nrc_q^&q'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"0.0.0.0\" , 'localhost']\n# Application definition",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-_xw%8m(b6h!(8lkajatqr@zq&v3*-v-&nqkdchi*w0nrc_q^&q'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"0.0.0.0\" , 'localhost']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"0.0.0.0\" , 'localhost']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'JWT.apps.JwtConfig',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"0.0.0.0\" , 'localhost']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'JWT.apps.JwtConfig',\n    'user',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'JWT.apps.JwtConfig',\n    'user',\n    'chat' ,\n    'psycopg2',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "ROOT_URLCONF = 'backend.urls'\nCORS_ALLOW_CREDENTIALS = True   \nCORS_ORIGIN_ALLOW_ALL = True\nCORS_EXPOSE_HEADERS = [\"Content-Type\", \"X-CSRFToken\"]\nCORS_ORIGIN_WHITELIST = [\n    'https://localhost:5173',\n    'https://localhost:8080',\n    'https://172.21.0.1:8080'\n]\nCORS_ALLOW_METHODS = [",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_CREDENTIALS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "CORS_ALLOW_CREDENTIALS = True   \nCORS_ORIGIN_ALLOW_ALL = True\nCORS_EXPOSE_HEADERS = [\"Content-Type\", \"X-CSRFToken\"]\nCORS_ORIGIN_WHITELIST = [\n    'https://localhost:5173',\n    'https://localhost:8080',\n    'https://172.21.0.1:8080'\n]\nCORS_ALLOW_METHODS = [\n    'GET',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_ALLOW_ALL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "CORS_ORIGIN_ALLOW_ALL = True\nCORS_EXPOSE_HEADERS = [\"Content-Type\", \"X-CSRFToken\"]\nCORS_ORIGIN_WHITELIST = [\n    'https://localhost:5173',\n    'https://localhost:8080',\n    'https://172.21.0.1:8080'\n]\nCORS_ALLOW_METHODS = [\n    'GET',\n    'POST',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_EXPOSE_HEADERS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "CORS_EXPOSE_HEADERS = [\"Content-Type\", \"X-CSRFToken\"]\nCORS_ORIGIN_WHITELIST = [\n    'https://localhost:5173',\n    'https://localhost:8080',\n    'https://172.21.0.1:8080'\n]\nCORS_ALLOW_METHODS = [\n    'GET',\n    'POST',\n    'PUT',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_WHITELIST",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "CORS_ORIGIN_WHITELIST = [\n    'https://localhost:5173',\n    'https://localhost:8080',\n    'https://172.21.0.1:8080'\n]\nCORS_ALLOW_METHODS = [\n    'GET',\n    'POST',\n    'PUT',\n    'PATCH',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_METHODS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "CORS_ALLOW_METHODS = [\n    'GET',\n    'POST',\n    'PUT',\n    'PATCH',\n    'DELETE',\n    'OPTIONS',\n]\nSESSION_COOKIE_SECURE = True\nSESSION_COOKIE_SAMESITE = \"None\"",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_SECURE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SESSION_COOKIE_SECURE = True\nSESSION_COOKIE_SAMESITE = \"None\"\nAUTH_USER_MODEL = \"user.User\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n             BASE_DIR / 'chat/templates',\n        ],\n        'APP_DIRS': True,",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_SAMESITE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SESSION_COOKIE_SAMESITE = \"None\"\nAUTH_USER_MODEL = \"user.User\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n             BASE_DIR / 'chat/templates',\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"user.User\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n             BASE_DIR / 'chat/templates',\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n             BASE_DIR / 'chat/templates',\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "ASGI_APPLICATION = 'backend.asgi.application'\n# ------------------------------ REST FRAMEWORK ------------------------------ #\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny',\n    ],\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n        'user.api.authenticate.CustomAuthentication',\n    ),",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny',\n    ],\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n        'user.api.authenticate.CustomAuthentication',\n    ),\n}\nWSGI_APPLICATION = 'backend.wsgi.application'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "WSGI_APPLICATION = 'backend.wsgi.application'\nSIMPLE_JWT = {\n  'ACCESS_TOKEN_LIFETIME': timedelta(days=30),\n  'REFRESH_TOKEN_LIFETIME': timedelta(days=365),\n  'ROTATE_REFRESH_TOKENS': False,\n  'BLACKLIST_AFTER_ROTATION': True,\n  'UPDATE_LAST_LOGIN': False,\n  'ALGORITHM': 'HS256',\n  'SIGNING_KEY': SECRET_KEY,\n  'VERIFYING_KEY': None,",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SIMPLE_JWT = {\n  'ACCESS_TOKEN_LIFETIME': timedelta(days=30),\n  'REFRESH_TOKEN_LIFETIME': timedelta(days=365),\n  'ROTATE_REFRESH_TOKENS': False,\n  'BLACKLIST_AFTER_ROTATION': True,\n  'UPDATE_LAST_LOGIN': False,\n  'ALGORITHM': 'HS256',\n  'SIGNING_KEY': SECRET_KEY,\n  'VERIFYING_KEY': None,\n  'AUDIENCE': None,",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'simple_chat',\n        'USER': 'user',\n        'PASSWORD': '123123',\n        'HOST': 'postgres',\n        'PORT': '5432',\n    }\n}",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nMEDIA_ROOT = BASE_DIR\nSTATICFILES_DIRS = [",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nMEDIA_ROOT = BASE_DIR\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static'),",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nMEDIA_ROOT = BASE_DIR\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static'),\n]",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nMEDIA_ROOT = BASE_DIR\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static'),\n]\n# Default primary key field type",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nMEDIA_ROOT = BASE_DIR\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nMEDIA_ROOT = BASE_DIR\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nimport pandas as pd\ndata = {",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nimport pandas as pd\ndata = {\n        'user_from': pd.Series(dtype=int),",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nimport pandas as pd\ndata = {\n        'user_from': pd.Series(dtype=int),\n        'address': pd.Series(dtype=str),",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nimport pandas as pd\ndata = {\n        'user_from': pd.Series(dtype=int),\n        'address': pd.Series(dtype=str),\n        'port': pd.Series(dtype=str),\n        'conversation': pd.Series(dtype=bool),\n        'user_to': pd.Series(dtype=str),\n    }\nCLIENTS = pd.DataFrame(data)",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "data = {\n        'user_from': pd.Series(dtype=int),\n        'address': pd.Series(dtype=str),\n        'port': pd.Series(dtype=str),\n        'conversation': pd.Series(dtype=bool),\n        'user_to': pd.Series(dtype=str),\n    }\nCLIENTS = pd.DataFrame(data)\nLENGTH_CLIENT = 0",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "CLIENTS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "CLIENTS = pd.DataFrame(data)\nLENGTH_CLIENT = 0",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "LENGTH_CLIENT",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "LENGTH_CLIENT = 0",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.backend.urls",
        "description": "backend.backend.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/',include('user.api.urls')) ,\n    path('api/',include('chat.api.urls')) ,\n    path('',include('chat.urls')) ,\n]",
        "detail": "backend.backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.backend.wsgi",
        "description": "backend.backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.backend.wsgi",
        "documentation": {}
    },
    {
        "label": "ConversationSerializer",
        "kind": 6,
        "importPath": "backend.chat.api.serializers",
        "description": "backend.chat.api.serializers",
        "peekOfCode": "class ConversationSerializer(serializers.ModelSerializer):\n    email_user_from = serializers.SerializerMethodField()\n    email_user_to = serializers.SerializerMethodField()\n    class Meta:\n        model = Conversation\n        fields = \"__all__\"\n    def get_email_user_from(self, obj):\n        return obj.user_from.email\n    def get_email_user_to(self, obj):\n        return obj.user_to.email",
        "detail": "backend.chat.api.serializers",
        "documentation": {}
    },
    {
        "label": "ChatSerialzier",
        "kind": 6,
        "importPath": "backend.chat.api.serializers",
        "description": "backend.chat.api.serializers",
        "peekOfCode": "class ChatSerialzier(serializers.ModelSerializer):\n    email_user_chat = serializers.SerializerMethodField()\n    class Meta:\n        model = Chat\n        fields = \"__all__\"\n    def get_email_user_chat(self, obj):\n        return obj.user_id.email",
        "detail": "backend.chat.api.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.chat.api.urls",
        "description": "backend.chat.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('conversation/create/', create_conversation, name = \"create_conversation\"),\n    path('conversation/', get_all_conversation, name = \"get_all_conversation\"),\n    re_path(r'^conversation/(?P<uuid>[0-9a-f-]+)/$',get_conversation, name='get_conversation'),\n]",
        "detail": "backend.chat.api.urls",
        "documentation": {}
    },
    {
        "label": "create_conversation",
        "kind": 2,
        "importPath": "backend.chat.api.views",
        "description": "backend.chat.api.views",
        "peekOfCode": "def create_conversation(request):\n    response = Response()\n    def notFound():\n        response.data = {\n            \"success\" : False , 'error' : {\n                'type' : \"Error Auth\" , 'value' : \"Failed\"\n            } , \n            'status' : status.HTTP_404_NOT_FOUND\n        }\n        response.status_code = status.HTTP_404_NOT_FOUND",
        "detail": "backend.chat.api.views",
        "documentation": {}
    },
    {
        "label": "get_conversation",
        "kind": 2,
        "importPath": "backend.chat.api.views",
        "description": "backend.chat.api.views",
        "peekOfCode": "def get_conversation(request):\n    response = Response()\n    def notFound():\n        response.data = {\n            \"success\" : False , 'error' : {\n                'type' : \"Error Auth\" , 'value' : \"Failed\"\n            } , \n            'status' : status.HTTP_404_NOT_FOUND\n        }\n        response.status_code = status.HTTP_404_NOT_FOUND",
        "detail": "backend.chat.api.views",
        "documentation": {}
    },
    {
        "label": "get_all_conversation",
        "kind": 2,
        "importPath": "backend.chat.api.views",
        "description": "backend.chat.api.views",
        "peekOfCode": "def get_all_conversation(request):\n    response = Response()\n    def notFound():\n        response.data = {\n            \"success\" : False , 'error' : {\n                'type' : \"Error Auth\" , 'value' : \"Failed\"\n            } , \n            'status' : status.HTTP_404_NOT_FOUND\n        }\n        response.status_code = status.HTTP_404_NOT_FOUND",
        "detail": "backend.chat.api.views",
        "documentation": {}
    },
    {
        "label": "get_conversation",
        "kind": 2,
        "importPath": "backend.chat.api.views",
        "description": "backend.chat.api.views",
        "peekOfCode": "def get_conversation(request , uuid):\n    response = Response()\n    def notFound():\n        response.data = {\n            \"success\" : False , 'error' : {\n                'type' : \"Error Auth\" , 'value' : \"Failed\"\n            } , \n            'status' : status.HTTP_404_NOT_FOUND\n        }\n        response.status_code = status.HTTP_404_NOT_FOUND",
        "detail": "backend.chat.api.views",
        "documentation": {}
    },
    {
        "label": "path_upload_image",
        "kind": 5,
        "importPath": "backend.chat.api.views",
        "description": "backend.chat.api.views",
        "peekOfCode": "path_upload_image = str(settings.BASE_DIR)+\"/media/photos\"\npath_upload_video = str(settings.BASE_DIR)+\"/media/videos\"\n# ---------------------------------------------------------------------------- #\n#                                  LOGIN USER                                  #\n# ---------------------------------------------------------------------------- #\n@api_view(['POST'])\n@permission_classes([])\n@authentication_classes([JWTAuthentication])\ndef create_conversation(request):\n    response = Response()",
        "detail": "backend.chat.api.views",
        "documentation": {}
    },
    {
        "label": "path_upload_video",
        "kind": 5,
        "importPath": "backend.chat.api.views",
        "description": "backend.chat.api.views",
        "peekOfCode": "path_upload_video = str(settings.BASE_DIR)+\"/media/videos\"\n# ---------------------------------------------------------------------------- #\n#                                  LOGIN USER                                  #\n# ---------------------------------------------------------------------------- #\n@api_view(['POST'])\n@permission_classes([])\n@authentication_classes([JWTAuthentication])\ndef create_conversation(request):\n    response = Response()\n    def notFound():",
        "detail": "backend.chat.api.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.chat.migrations.0001_initial",
        "description": "backend.chat.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Conversation',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),",
        "detail": "backend.chat.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.chat.migrations.0002_rename_user_id_conversation_user_from",
        "description": "backend.chat.migrations.0002_rename_user_id_conversation_user_from",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chat', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='conversation',\n            old_name='user_id',\n            new_name='user_from',\n        ),",
        "detail": "backend.chat.migrations.0002_rename_user_id_conversation_user_from",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.chat.migrations.0003_chat_user_id",
        "description": "backend.chat.migrations.0003_chat_user_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('chat', '0002_rename_user_id_conversation_user_from'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='chat',\n            name='user_id',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_user_id', to=settings.AUTH_USER_MODEL),",
        "detail": "backend.chat.migrations.0003_chat_user_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.chat.migrations.0004_alter_chat_conversation_id",
        "description": "backend.chat.migrations.0004_alter_chat_conversation_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chat', '0003_chat_user_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='chat',\n            name='conversation_id',\n            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='conversions', to='chat.conversation'),\n        ),",
        "detail": "backend.chat.migrations.0004_alter_chat_conversation_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.chat.migrations.0005_alter_chat_conversation_id",
        "description": "backend.chat.migrations.0005_alter_chat_conversation_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chat', '0004_alter_chat_conversation_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='chat',\n            name='conversation_id',\n            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='chats', to='chat.conversation'),\n        ),",
        "detail": "backend.chat.migrations.0005_alter_chat_conversation_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.chat.migrations.0006_alter_chat_conversation_id",
        "description": "backend.chat.migrations.0006_alter_chat_conversation_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chat', '0005_alter_chat_conversation_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='chat',\n            name='conversation_id',\n            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_conversation', to='chat.conversation'),\n        ),",
        "detail": "backend.chat.migrations.0006_alter_chat_conversation_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.chat.migrations.0007_conversation_is_seen_conversation_user_send",
        "description": "backend.chat.migrations.0007_conversation_is_seen_conversation_user_send",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('chat', '0006_alter_chat_conversation_id'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='conversation',\n            name='is_seen',\n            field=models.BooleanField(blank=True, null=True),",
        "detail": "backend.chat.migrations.0007_conversation_is_seen_conversation_user_send",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.chat.migrations.0008_remove_conversation_user_send",
        "description": "backend.chat.migrations.0008_remove_conversation_user_send",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chat', '0007_conversation_is_seen_conversation_user_send'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='conversation',\n            name='user_send',\n        ),\n    ]",
        "detail": "backend.chat.migrations.0008_remove_conversation_user_send",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.chat.migrations.0009_conversation_is_sent",
        "description": "backend.chat.migrations.0009_conversation_is_sent",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chat', '0008_remove_conversation_user_send'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='conversation',\n            name='is_sent',\n            field=models.BooleanField(blank=True, null=True),\n        ),",
        "detail": "backend.chat.migrations.0009_conversation_is_sent",
        "documentation": {}
    },
    {
        "label": "ChatConfig",
        "kind": 6,
        "importPath": "backend.chat.apps",
        "description": "backend.chat.apps",
        "peekOfCode": "class ChatConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'chat'",
        "detail": "backend.chat.apps",
        "documentation": {}
    },
    {
        "label": "Conversation",
        "kind": 6,
        "importPath": "backend.chat.models",
        "description": "backend.chat.models",
        "peekOfCode": "class Conversation(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user_from =  models.ForeignKey(User, on_delete=models.SET_NULL, null=True,blank=True,related_name='chat_user_from')\n    user_to = models.ForeignKey(User, on_delete=models.SET_NULL, null=True,blank=True,related_name='chat_user_to')\n    content_last = models.TextField( null = True, blank = True)\n    created_at = models.DateTimeField( null = True, blank = True , default = datetime.datetime.now)\n    is_seen = models.BooleanField(null = True , blank = True)\n    is_sent = models.BooleanField(null = True , blank = True)\nclass Chat(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)",
        "detail": "backend.chat.models",
        "documentation": {}
    },
    {
        "label": "Chat",
        "kind": 6,
        "importPath": "backend.chat.models",
        "description": "backend.chat.models",
        "peekOfCode": "class Chat(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    conversation_id =  models.ForeignKey(Conversation, on_delete=models.CASCADE, null=False,blank=True,related_name='chat_conversation')\n    user_id = models.ForeignKey(User, on_delete=models.SET_NULL, null=True,blank=True,related_name='chat_user_id')\n    content = models.TextField( null = True, blank = True)\n    created_at = models.DateTimeField( null = True, blank = True , default = datetime.datetime.now)",
        "detail": "backend.chat.models",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "backend.chat.routing",
        "description": "backend.chat.routing",
        "peekOfCode": "websocket_urlpatterns = [\n    re_path(r\"ws/chat/(?P<room_name>\\w+)/$\", socket_server.ChatConsumer.as_asgi()),\n]",
        "detail": "backend.chat.routing",
        "documentation": {}
    },
    {
        "label": "ChatConsumer",
        "kind": 6,
        "importPath": "backend.chat.socket_server",
        "description": "backend.chat.socket_server",
        "peekOfCode": "class ChatConsumer(WebsocketConsumer):\n    def connect(self):\n        length = settings.LENGTH_CLIENT\n        clients = settings.CLIENTS\n        print('before: ',clients)\n        print('len(self.clients) :' , length)\n        clientNew = [\n            False ,\n            self.scope[\"client\"][0] ,\n            self.scope[\"client\"][1] ,",
        "detail": "backend.chat.socket_server",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.chat.urls",
        "description": "backend.chat.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"chat/socket/\", views.chat, name=\"room\"),\n]",
        "detail": "backend.chat.urls",
        "documentation": {}
    },
    {
        "label": "chat",
        "kind": 2,
        "importPath": "backend.chat.views",
        "description": "backend.chat.views",
        "peekOfCode": "def chat(request):\n    return render(request, \"chat/chat.html\")",
        "detail": "backend.chat.views",
        "documentation": {}
    },
    {
        "label": "CustomAuthentication",
        "kind": 6,
        "importPath": "backend.user.api.authenticate",
        "description": "backend.user.api.authenticate",
        "peekOfCode": "class CustomAuthentication(JWTAuthentication):\n    def authenticate(self, request):\n        header = self.get_header(request)\n        if header is None:\n            raw_token = request.COOKIES.get(settings.SIMPLE_JWT['AUTH_COOKIE']) or None\n        else:\n            raw_token = self.get_raw_token(header)\n        if raw_token is None:\n            return None\n        validated_token = self.get_validated_token(raw_token)",
        "detail": "backend.user.api.authenticate",
        "documentation": {}
    },
    {
        "label": "enforce_csrf",
        "kind": 2,
        "importPath": "backend.user.api.authenticate",
        "description": "backend.user.api.authenticate",
        "peekOfCode": "def enforce_csrf(request):\n    check = CSRFCheck()\n    check.process_request(request)\n    reason = check.process_view(request, None, (), {})\n    if reason:\n        raise exceptions.PermissionDenied('CSRF Failed: %s' % reason)\nclass CustomAuthentication(JWTAuthentication):\n    def authenticate(self, request):\n        header = self.get_header(request)\n        if header is None:",
        "detail": "backend.user.api.authenticate",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "backend.user.api.serializers",
        "description": "backend.user.api.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['name' , 'email' , 'photo']",
        "detail": "backend.user.api.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.user.api.urls",
        "description": "backend.user.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('login/', login, name = \"login_user\"),\n    path('logout/', logout, name = \"logout_user\"),\n    # path('user/change-password/', change_password_user, name = \"change_password_user\"),\n    path('register-user/', register_user, name = \"register_user\") , \n    path('search-user/', search_user, name = \"search_user\") ,\n]",
        "detail": "backend.user.api.urls",
        "documentation": {}
    },
    {
        "label": "login",
        "kind": 2,
        "importPath": "backend.user.api.views",
        "description": "backend.user.api.views",
        "peekOfCode": "def login(request):\n    def get_tokens_for_user(user):\n        refresh = RefreshToken.for_user(user)\n        return {\n            'refresh': str(refresh),\n            'access': str(refresh.access_token),\n    }\n    data_request= json.loads(request.body.decode('utf-8'))\n    print(data_request)\n    response = Response()",
        "detail": "backend.user.api.views",
        "documentation": {}
    },
    {
        "label": "logout",
        "kind": 2,
        "importPath": "backend.user.api.views",
        "description": "backend.user.api.views",
        "peekOfCode": "def logout(request):\n    try:\n        response = Response()\n        response.delete_cookie('refresh_token')\n        response.delete_cookie('csrftoken')\n        response.data = {\n            \"success\" : \"Logout success\" , \"status\" : status.HTTP_200_OK\n        }\n        response.status_code = status.HTTP_200_OK\n    except Exception as e :",
        "detail": "backend.user.api.views",
        "documentation": {}
    },
    {
        "label": "register_user",
        "kind": 2,
        "importPath": "backend.user.api.views",
        "description": "backend.user.api.views",
        "peekOfCode": "def register_user(request):\n    response = Response()\n    list_name_file_blog = []\n    def get_tokens_for_user(user):\n        refresh = RefreshToken.for_user(user)\n        return {\n            'refresh': str(refresh),\n            'access': str(refresh.access_token),\n    }\n    def decodeFile(image_data,is_image,is_video):",
        "detail": "backend.user.api.views",
        "documentation": {}
    },
    {
        "label": "search_user",
        "kind": 2,
        "importPath": "backend.user.api.views",
        "description": "backend.user.api.views",
        "peekOfCode": "def search_user(request):\n    response = Response()\n    def notFound():\n        response.data = {\n            \"success\" : False , 'error' : {\n                'type' : \"Error Auth\" , 'value' : \"Failed\"\n            } , \n            'status' : status.HTTP_404_NOT_FOUND\n        }\n        response.status_code = status.HTTP_404_NOT_FOUND",
        "detail": "backend.user.api.views",
        "documentation": {}
    },
    {
        "label": "path_upload_image",
        "kind": 5,
        "importPath": "backend.user.api.views",
        "description": "backend.user.api.views",
        "peekOfCode": "path_upload_image = str(settings.BASE_DIR)+\"/media/photos\"\npath_upload_video = str(settings.BASE_DIR)+\"/media/videos\"\n# ---------------------------------------------------------------------------- #\n#                                  LOGIN USER                                  #\n# ---------------------------------------------------------------------------- #\n@api_view(['POST'])\n@permission_classes([])\n@authentication_classes([])\ndef login(request):\n    def get_tokens_for_user(user):",
        "detail": "backend.user.api.views",
        "documentation": {}
    },
    {
        "label": "path_upload_video",
        "kind": 5,
        "importPath": "backend.user.api.views",
        "description": "backend.user.api.views",
        "peekOfCode": "path_upload_video = str(settings.BASE_DIR)+\"/media/videos\"\n# ---------------------------------------------------------------------------- #\n#                                  LOGIN USER                                  #\n# ---------------------------------------------------------------------------- #\n@api_view(['POST'])\n@permission_classes([])\n@authentication_classes([])\ndef login(request):\n    def get_tokens_for_user(user):\n        refresh = RefreshToken.for_user(user)",
        "detail": "backend.user.api.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.user.migrations.0001_initial",
        "description": "backend.user.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),",
        "detail": "backend.user.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "backend.user.admin",
        "description": "backend.user.admin",
        "peekOfCode": "class UserAdmin(admin.ModelAdmin):\n    list_display = ('username' , 'email')\nadmin.site.register(User,UserAdmin)",
        "detail": "backend.user.admin",
        "documentation": {}
    },
    {
        "label": "UserConfig",
        "kind": 6,
        "importPath": "backend.user.apps",
        "description": "backend.user.apps",
        "peekOfCode": "class UserConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'user'",
        "detail": "backend.user.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "backend.user.models",
        "description": "backend.user.models",
        "peekOfCode": "class User(AbstractUser):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    photo    = models.ImageField(upload_to =  'media/photos/user', height_field = None, width_field = None, max_length = None)\n    name     = models.CharField( max_length=255 )\n    password = models.CharField( max_length = 255)\n    email    = models.EmailField(unique = True , max_length = 255)\n    USERNAME_FIELD = 'username'\n    def __str__(self):\n        return  self.email\n    def __unicode__(self):",
        "detail": "backend.user.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.manage",
        "description": "backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend.manage",
        "documentation": {}
    }
]