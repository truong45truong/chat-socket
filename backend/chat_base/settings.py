"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
""" 

from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(dotenv_path=os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG')

ALLOWED_HOSTS = [os.getenv('ALLOWED_HOSTS')]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'psycopg2',
    'rest_framework',
    'corsheaders',
    'rest_framework_simplejwt',
    'channels',    
    'daphne',
    'chat_user',
    'chat_base.core',
    'chat_user.chat',
    'chat_user.user',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'chat_base.urls'
CORS_ALLOW_CREDENTIALS = True   
CORS_ORIGIN_ALLOW_ALL = True
CORS_EXPOSE_HEADERS = ["Content-Type", "X-CSRFToken"]
CORS_ORIGIN_WHITELIST = [
    'https://localhost:5173',
    'https://localhost:8080',
    'https://172.21.0.1:8080',
    'http://192.168.1.31:8080'
]
CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS',
]
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = "None"
AUTH_USER_MODEL = "user.User"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
             BASE_DIR / 'chat/templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ASGI_APPLICATION = 'chat_base.asgi.application'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [( os.getenv('CHANNEL_LAYERS_HOST'), os.getenv('CHANNEL_LAYERS_PORT'))],
        },
    },
}
# ------------------------------ REST FRAMEWORK ------------------------------ #
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'chat_base.core.middlewares.authenticate.CustomAuthentication',
    ),
}
WSGI_APPLICATION = 'chat_base.wsgi.application'

SIMPLE_JWT = {
  'ACCESS_TOKEN_LIFETIME': timedelta(days=30),
  'REFRESH_TOKEN_LIFETIME': timedelta(days=365),
  'ROTATE_REFRESH_TOKENS': os.getenv('ROTATE_REFRESH_TOKENS'),
  'BLACKLIST_AFTER_ROTATION': os.getenv('BLACKLIST_AFTER_ROTATION'),
  'UPDATE_LAST_LOGIN': os.getenv('UPDATE_LAST_LOGIN'),

  'ALGORITHM': os.getenv('ALGORITHM'),
  'SIGNING_KEY': SECRET_KEY,
  'VERIFYING_KEY': os.getenv('VERIFYING_KEY'),
  'AUDIENCE': os.getenv('AUDIENCE'),
  'ISSUER': os.getenv('ISSUER'),

  'AUTH_HEADER_TYPES': ('Bearer',),
  'AUTH_HEADER_NAME': os.getenv('AUTH_HEADER_NAME'),
  'USER_ID_FIELD': os.getenv('USER_ID_FIELD'),
  'USER_ID_CLAIM': os.getenv('USER_ID_CLAIM'),
  'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

  'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
  'TOKEN_TYPE_CLAIM': os.getenv('TOKEN_TYPE_CLAIM'),

  'JTI_CLAIM': os.getenv('JTI_CLAIM'),

  'SLIDING_TOKEN_REFRESH_EXP_CLAIM': os.getenv('SLIDING_TOKEN_REFRESH_EXP_CLAIM'),
  'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
  'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),

  # custom
  'AUTH_COOKIE': os.getenv('AUTH_COOKIE'),
  'AUTH_COOKIE_REFRESH': os.getenv('AUTH_COOKIE_REFRESH'),
  'AUTH_COOKIE_DOMAIN': os.getenv('AUTH_COOKIE_DOMAIN'), 
  'AUTH_COOKIE_SECURE': None,
  'AUTH_COOKIE_HTTP_ONLY' : os.getenv('AUTH_COOKIE_HTTP_ONLY'),
  'AUTH_COOKIE_PATH': os.getenv('AUTH_COOKIE_PATH'),  
  'AUTH_COOKIE_SAMESITE': None,
}
# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':  os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_ROOT = BASE_DIR

STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static'),
]


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# DATA Socket
LENGTH_CLIENT = 0
CLIENTS_ARRAY = []